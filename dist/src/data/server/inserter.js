"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}(),_ping=require("ping"),_ping2=_interopRequireDefault(_ping),_moment=require("moment"),_moment2=_interopRequireDefault(_moment),_google=require("./google"),_google2=_interopRequireDefault(_google),_nagios=require("./nagios"),_nagios2=_interopRequireDefault(_nagios),_database=require("./database"),_database2=_interopRequireDefault(_database);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Inserter=function(){function e(){_classCallCheck(this,e),this.database=new _database2.default,this.g=new _google2.default,this.n=new _nagios2.default("overlord.realsprint.com"),this.pings(),this.nagios(),this.google()}return _createClass(e,[{key:"getUsers",value:function(t){var n=this;return this.database.getDatabase().then(function(e){return e.get("SELECT * FROM servers WHERE id = ?",t).then(function(e){return n.g.batchGet([{viewId:e.viewId,dateRanges:[{startDate:(0,_moment2.default)().format("YYYY-MM-DD"),endDate:(0,_moment2.default)().format("YYYY-MM-DD")}],metrics:[{expression:"ga:newUsers"}]}]).then(function(e){return Number(e.reports[0].data.totals[0].values[0])}).catch(function(e){return console.log("Fetch Google Report Error: "+e)})})})}},{key:"getUp",value:function(t){return this.database.getDatabase().then(function(e){return e.all("SELECT * FROM pings WHERE (id = ?) ORDER BY insertionDate DESC LIMIT 3",t).then(function(t){return new Promise(function(e){e(t.find(function(e){return e.up}))}).then(function(e){return void 0!==e?t[0].up?2:1:0})})})}},{key:"pings",value:function(){var t=this;this.database.getDatabase().then(function(i){i.all("SELECT * FROM SERVERS WHERE hostname IS NOT null").then(function(e){e.forEach(function(n){_ping2.default.sys.probe(n.hostname,function(e,t){i.run('INSERT INTO pings(id, up, insertionDate) VALUES (?, ?, DATETIME("now"))',n.id,e)}),t.getUp(n.id).then(function(e){i.run('INSERT INTO status (id, status, insertionDate) VALUES (?, ?, DATETIME("now"))',n.id,e)})})})}),setTimeout(this.pings,15e3)}},{key:"nagios",value:function(){var i=this;this.database.getDatabase().then(function(n){n.all("SELECT * FROM SERVERS WHERE (nagios IS NOT null)").then(function(e){e.forEach(function(t){Promise.all([i.n.getNetworkThroughput(t.id),i.n.getCPULoad(t.id),i.n.getMemoryLoad(t.id)]).then(function(e){try{n.run('INSERT INTO traffic (id, ingoing, outgoing, insertionDate) VALUES (?, ?, ?, DATETIME("now"))',t.id,e[0].in,e[0].out),n.run('INSERT INTO cpu (id, one, five, fifteen, insertionDate) VALUES (?, ?, ?, ?, DATETIME("now"))',t.id,e[1].one,e[1].five,e[1].fifteen),n.run('INSERT INTO memory (id, memory, insertionDate) VALUES (?, ?, DATETIME("now"))',t.id,e[2])}catch(e){console.log(e)}})})})}),setTimeout(this.nagios,15e3)}},{key:"google",value:function(){var i=this;this.database.getDatabase().then(function(n){n.all("SELECT * FROM SERVERS WHERE (viewId IS NOT null)").then(function(e){e.forEach(function(t){i.getUsers(t.id).then(function(e){n.run('INSERT INTO users (id, current, insertionDate) VALUES (?, ?, DATETIME("now"))',t.id,e)})})})}),setTimeout(this.google,15e3)}}]),e}();exports.default=Inserter;